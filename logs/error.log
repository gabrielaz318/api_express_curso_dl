{"level":"error","message":"User_Exists_Error: Username already exists\n    at CreateUserUseCase.<anonymous> (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\src\\models\\users\\useCases\\create-user\\create-user.usecase.ts:27:13)\n    at Generator.next (<anonymous>)\n    at fulfilled (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\src\\models\\users\\useCases\\create-user\\create-user.usecase.ts:5:58)","timestamp":"07/10/2023 13:55:57"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.speciality.create()` invocation in\nE:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\src\\modules\\speciality\\repositories\\implementations\\speciality.prisma.repository.ts:7:50\n\n  4 \n  5 export class SpecialityPrismaRepository implements ISpecialityRepository {\n  6   async save(data: Speciality): Promise<Speciality> {\n→ 7     const result = await prismaClient.speciality.create(\nUnique constraint failed on the fields: (`name`)\n    at Cn.handleRequestError (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)","timestamp":"07/10/2023 14:37:04"}
{"level":"error","message":"PrismaClientKnownRequestError: \nInvalid `prismaClient.speciality.create()` invocation in\nE:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\src\\modules\\speciality\\repositories\\implementations\\speciality.prisma.repository.ts:7:50\n\n  4 \n  5 export class SpecialityPrismaRepository implements ISpecialityRepository {\n  6   async save(data: Speciality): Promise<Speciality> {\n→ 7     const result = await prismaClient.speciality.create(\nUnique constraint failed on the fields: (`name`)\n    at Cn.handleRequestError (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:123:6817)\n    at Cn.handleAndLogRequestError (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:123:6206)\n    at Cn.request (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:123:5926)\n    at async l (E:\\Área de Trabalho - Arquivos\\Gabriel\\Curso_Nodejs_DaniLeao\\api_express\\node_modules\\@prisma\\client\\runtime\\library.js:128:9968)","timestamp":"07/10/2023 15:10:49"}
